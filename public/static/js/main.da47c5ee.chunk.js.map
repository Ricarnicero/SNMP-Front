{"version":3,"sources":["Modules/Chart.js","Pages/serverDetails.js","Modules/ServerBadge.js","Pages/Servers.js","Pages/NewServer.js","App.js","serviceWorker.js","index.js"],"names":["Chart","props","onClickZoomIn","e","state","count","setState","prevState","getActivity","serverid","oid","onClickZoomOut","getZoomPerc","num","Math","ceil","db","firestore","data","ref","this","collection","doc","where","orderBy","limit","get","then","querySnapshot","forEach","myDate","date","toDate","push","value","getHours","getMinutes","getSeconds","refvalue","setDataState","reverse","ex","console","error","className","name","onClick","style","width","height","id","x1","y1","x2","y2","offset","stopColor","stopOpacity","dataKey","type","domain","dataMax","strokeDasharray","stroke","fillOpacity","fill","Component","jsfiddleUrl","ServerDetails","getAllData","nombre","oids","setInterval","alias","ubicacion","tiempo_sistema_encendido","contacto","sistema_operativo","map","key","ServerBadge","ip","href","window","location","toString","replace","Servers","onSnapshot","server","NewServer","handleSubmit","preventDefault","createServer","comunidad","handleChange","target","add","catch","alert","onSubmit","placeholder","onChange","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","App","urlParams","URLSearchParams","search","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.da47c5ee.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { firestore } from \"firebase\";\r\nimport {\r\n  AreaChart,\r\n  Area,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  ResponsiveContainer\r\n} from \"recharts\";\r\nclass Chart extends Component {\r\n  static jsfiddleUrl = \"https://jsfiddle.net/alidingling/xqjtetw0/\";\r\n  constructor(props) {\r\n    super(props);\r\n    this.db = firestore();\r\n    this.state = { data: [{}], serverid: \" \", oid: \" \", count: 25, ref: \"\" };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState(\r\n      (state, props) => ({\r\n        serverid: props.serverid,\r\n        oid: props.oid\r\n      }),\r\n      () => {        \r\n        this.getActivity(this.state.serverid, this.state.oid, this.state.count);\r\n      }\r\n    );\r\n  }\r\n\r\n  setDataState(data, ref) {\r\n    this.setState({ data: data, ref: ref });\r\n  }\r\n\r\n  setDataState(data) {\r\n    this.setState({ data: data });\r\n  }\r\n\r\n  getActivity(serverid, oid, count) {\r\n    var data = [];\r\n    var ref;\r\n    try {\r\n      this.db\r\n        .collection(\"Servidores\")\r\n        .doc(serverid)\r\n        .collection(\"Registros\")\r\n        .where(\"oidName\", \"==\", oid)\r\n        .orderBy(\"date\", \"desc\")\r\n        .limit(count)\r\n        .get().then(querySnapshot => {\r\n          querySnapshot.forEach(function(doc) {\r\n            var myDate = doc.data().date.toDate();\r\n\r\n            data.push({\r\n              value: doc.data().value,\r\n              date:\r\n                myDate.getHours() +\r\n                \":\" +\r\n                myDate.getMinutes() +\r\n                \":\" +\r\n                myDate.getSeconds()\r\n            });\r\n            ref = doc.data().refvalue;\r\n          });\r\n          if (data && ref) this.setDataState(data.reverse(), ref);\r\n          else if (data) this.setDataState(data.reverse());\r\n        });\r\n    } catch (ex) {\r\n      console.error(ex);\r\n    }\r\n  }\r\n\r\n  onClickZoomIn = e => {\r\n    var count = this.state.count;\r\n    if (count > 5)\r\n      this.setState(\r\n        (prevState, props) => ({ count: prevState.count - 1 }),\r\n        () => {\r\n          this.getActivity(\r\n            this.state.serverid,\r\n            this.state.oid,\r\n            this.state.count\r\n          );\r\n        }\r\n      );\r\n  };\r\n\r\n  onClickZoomOut = e => {\r\n    var count = this.state.count;\r\n    if (count < 25)\r\n      this.setState(\r\n        (prevState, props) => ({ count: prevState.count + 1 }),\r\n        () => {\r\n          this.getActivity(\r\n            this.state.serverid,\r\n            this.state.oid,\r\n            this.state.count\r\n          );\r\n        }\r\n      );\r\n  };\r\n\r\n  getZoomPerc = () => {\r\n    var num = 500 / this.state.count;\r\n    return Math.ceil(num) + \"%\";\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"col-12 col-md-6 my-3\">\r\n        <div className=\"card mx\">\r\n          <h3 className=\"text-center\">{this.props.name}</h3>\r\n          <div className=\"row\">\r\n            <div className=\"col\">\r\n              <button onClick={this.onClickZoomOut}>\r\n                <span>&#10134;</span>\r\n              </button>\r\n            </div>\r\n            <div className=\"col\">Zoom: {this.getZoomPerc()}</div>\r\n            <div className=\"col\">\r\n              <button onClick={this.onClickZoomIn}>\r\n                <span>&#10133;</span>\r\n              </button>\r\n            </div>\r\n          </div>\r\n\r\n          <div style={{ width: \"100%\", height: 300 }}>\r\n            <ResponsiveContainer>\r\n              <AreaChart height={250} data={this.state.data}>\r\n                <defs>\r\n                  <linearGradient id=\"colorUv\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\r\n                    <stop offset=\"5%\" stopColor=\"#8884d8\" stopOpacity={0.8} />\r\n                    <stop offset=\"95%\" stopColor=\"#8884d8\" stopOpacity={0} />\r\n                  </linearGradient>\r\n                </defs>\r\n                <XAxis dataKey=\"date\" />\r\n                <YAxis\r\n                  type=\"number\"\r\n                  domain={[\r\n                    0,\r\n                    dataMax => (this.state.ref ? this.state.ref : dataMax * 2)\r\n                  ]}\r\n                />\r\n                <CartesianGrid strokeDasharray=\"3 3\" />\r\n                <Tooltip />\r\n                <Area\r\n                  type=\"monotone\"\r\n                  dataKey=\"value\"\r\n                  stroke=\"#8884d8\"\r\n                  fillOpacity={1}\r\n                  fill=\"url(#colorUv)\"\r\n                />\r\n              </AreaChart>\r\n            </ResponsiveContainer>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Chart;\r\n","import React, { Component } from \"react\";\r\nimport { firestore } from \"firebase\";\r\nimport Chart from \"../Modules/Chart\";\r\n\r\nclass ServerDetails extends Component {\r\n  constructor() {\r\n    super();\r\n    this.db = firestore();\r\n    this.state = { data: [], oids: [], serverid: \" \"};\r\n  }\r\n\r\n  getAllData = () =>{\r\n    this.db\r\n    .collection(\"Servidores\")\r\n    .doc(this.state.serverid)\r\n    .get()\r\n    .then(doc => {\r\n      this.setState({\r\n        data: doc.data(),\r\n        serverid: doc.id\r\n      });\r\n    });\r\n  this.db.collection(\"OIDS\").where(\"once\",\"==\",false).get().then(querySnapshot => {\r\n    var data = [];\r\n    querySnapshot.forEach(oid => {\r\n      data.push(oid.data().nombre);\r\n    });\r\n    this.setState({\r\n      oids: data\r\n    });});\r\n  }\r\n  componentDidMount() {\r\n    this.setState(\r\n      (state, props) => ({\r\n        serverid: props.serverid\r\n      }),\r\n      () => {\r\n        this.getAllData();\r\n        setInterval(()  => {\r\n        this.getAllData();\r\n        },60000);\r\n      }\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container text-center\">\r\n        <h1>{this.state.data.alias}</h1>\r\n        <div className=\"row my-1\">\r\n        <b>ubicacion:</b> {this.state.data.ubicacion}\r\n\r\n        </div>\r\n        <div className=\"row my-1\">\r\n        <b>Tiempo corriendo el sistema:</b> {this.state.data.tiempo_sistema_encendido}\r\n\r\n        </div>\r\n        <div className=\"row my-1\">\r\n        <b>Contaco:</b> {this.state.data.contacto}\r\n\r\n        </div>\r\n        <div className=\"row my-1\">\r\n        <b>Sistema Opertivo y hora:</b> {this.state.data.sistema_operativo}\r\n\r\n        </div>\r\n\r\n        <div className=\"row my-1\">\r\n          {this.state.oids.map(oid => {\r\n            return (\r\n              <Chart\r\n                key={oid}\r\n                name={oid}\r\n                oid={oid}\r\n                serverid={this.state.serverid}\r\n              ></Chart>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ServerDetails;\r\n","import React, { Component } from \"react\";\r\nclass ServerBadge extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { serverid: \" \", alias: \" \", ip: \" \" };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState((state, props) => ({\r\n      serverid: props.serverid,\r\n      alias: props.alias,\r\n      ip: props.ip\r\n    }));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"col-12 col-md-6 border rounded-lg\">\r\n        <div className=\"text-center\">\r\n          <h3>{this.state.alias}</h3>\r\n          <p>{this.state.ip}</p>\r\n        </div>\r\n        <div className=\"text-right\">\r\n          <a\r\n            href={\r\n              window.location.href.toString().replace(\"?\", \"\") +\r\n              `?serverid=${this.state.serverid}`\r\n            }\r\n          >\r\n            Ir &#128073;\r\n          </a>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ServerBadge;\r\n","import React, { Component } from \"react\";\r\nimport { firestore } from \"firebase\";\r\nimport ServerBadge from \"../Modules/ServerBadge\";\r\nclass Servers extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { data: [] };\r\n    this.db = firestore();\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.db.collection(\"Servidores\").onSnapshot(querySnapshot => {\r\n      var data = [];\r\n      querySnapshot.forEach(server => {\r\n        data.push({\r\n          alias: server.data().alias,\r\n          serverid: server.id,\r\n          ip: server.data().ip\r\n        });\r\n      });\r\n      this.setState({\r\n        data: data\r\n      });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container mt-5\">\r\n        <div className=\"my-3 mx-auto text-center\">\r\n          <h2>Servidores monitoreados</h2>\r\n        </div>\r\n        <div className=\"row\">\r\n          {this.state.data.map(server => {\r\n            return (\r\n              <ServerBadge\r\n                key={server.serverid}\r\n                serverid={server.serverid}\r\n                alias={server.alias}\r\n                ip={server.ip}\r\n              />\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Servers;\r\n","import React, { Component } from \"react\";\r\nimport { firestore } from \"firebase\";\r\nclass NewServer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.db = firestore();\r\n    this.state = { error: \" \", alias: \" \", ip: \" \", comunidad: \" \" };\r\n  }\r\n\r\n  createServer(ip, comunidad, alias) {\r\n    this.db\r\n      .collection(\"Servidores\")\r\n      .add({\r\n        ip: ip,\r\n        comunidad: comunidad,\r\n        alias: alias\r\n      })\r\n      .catch(error => {\r\n        alert(`Hubo error en: ${error}`);\r\n      });\r\n  }\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.createServer(this.state.ip, this.state.comunidad, this.state.alias);\r\n  };\r\n\r\n  handleChange = e => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container mt-5\">\r\n        <div className=\"my-3 mx-auto text-center\">\r\n          <h2>Monitorear nuevo servidor</h2>\r\n        </div>\r\n        <form onSubmit={this.handleSubmit}>\r\n          <div className=\"input-group mb-3\">\r\n            <div className=\"input-group-prepend\">\r\n              <span className=\"input-group-text\">Servidor</span>\r\n            </div>\r\n\r\n            <input\r\n              type=\"text\"\r\n              name=\"alias\"\r\n              className=\"form-control\"\r\n              placeholder=\"Alias\"\r\n              onChange={this.handleChange}\r\n            />\r\n            <input\r\n              type=\"text\"\r\n              name=\"ip\"\r\n              className=\"form-control\"\r\n              placeholder=\"IP\"\r\n              onChange={this.handleChange}\r\n            />\r\n            <input\r\n              type=\"text\"\r\n              name=\"comunidad\"\r\n              className=\"form-control\"\r\n              placeholder=\"Comunidad\"\r\n              onChange={this.handleChange}\r\n            />\r\n            <div className=\"input-group-append\">\r\n              <button className=\"btn btn-success\" type=\"submit\">\r\n                Registrar\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </form>\r\n        <div className=\"text-center\">{this.state.error}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NewServer;\r\n","import React, { Component } from \"react\";\r\nimport \"./App.css\";\r\nimport firebase from \"firebase\";\r\n//import Chart from \"./Modules/Chart\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n//import ServidorSNMP from \"./SNMP/ServidorSNMP\";\r\nimport ServerDetails from \"./Pages/serverDetails\";\r\nimport Servers from \"./Pages/Servers\";\r\nimport NewServer from \"./Pages/NewServer\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyApzaUbCad-8VciNeuH1UTSkCrAct8Tn2o\",\r\n  authDomain: \"redes3snmp.firebaseapp.com\",\r\n  databaseURL: \"https://redes3snmp.firebaseio.com\",\r\n  projectId: \"redes3snmp\",\r\n  storageBucket: \"\",\r\n  messagingSenderId: \"155892603157\",\r\n  appId: \"1:155892603157:web:eafc893180ac8936b9711c\"\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n    const urlParams = new window.URLSearchParams(window.location.search);\r\n    this.serverid = urlParams.get(\"serverid\");\r\n  }\r\n\r\n  render() {\r\n    return this.serverid ? (\r\n      <ServerDetails serverid={this.serverid} />\r\n    ) : (\r\n      <div>\r\n        <NewServer />\r\n        <Servers />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}